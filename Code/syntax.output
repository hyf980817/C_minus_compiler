Terminals unused in grammar

   STRING
   VOID
   POINT
   S_QUOTA
   QUOTA


Grammar

    0 $accept: Program $end

    1 Program: DefDecList

    2 DefDecList: %empty
    3           | DefDec DefDecList

    4 DefDec: Specifier VarDecList SEMI
    5       | Specifier FunDec BLOCK

    6 VarDecList: VarDec
    7           | VarDec COMMA VarDecList

    8 Specifier: TYPE_INT
    9          | TYPE_FLOAT
   10          | TYPE_CHAR

   11 VarDec: ID
   12       | VarDec LB INT RB

   13 FunDec: ID LP ParaList RP
   14       | ID LP RP

   15 ParaList: ParaDec COMMA ParaList
   16         | ParaDec

   17 ParaDec: Specifier VarDec

   18 BLOCK: LC SentenceList RC

   19 SentenceList: Sentence SentenceList
   20             | %empty

   21 Sentence: Def
   22         | Stmt

   23 Def: Specifier DecList SEMI

   24 DecList: Dec
   25        | Dec COMMA DecList

   26 Dec: VarDec
   27    | VarDec OP_ASSIGN Expr

   28 Stmt: Expr SEMI
   29     | BLOCK
   30     | RETURN Expr SEMI
   31     | IF LP Expr RP Stmt
   32     | IF LP Expr RP Stmt ELSE Stmt
   33     | WHILE LP Expr RP Stmt
   34     | FOR LP Expr SEMI Expr SEMI Expr SEMI RP Stmt
   35     | BREAK SEMI
   36     | CONTINUE SEMI

   37 Expr: Expr OP_ASSIGN Expr
   38     | Expr OP_BIT_OR Expr
   39     | Expr OP_BIT_XOR Expr
   40     | Expr OP_BIT_AND Expr
   41     | Expr OP_EQ Expr
   42     | Expr OP_NEQ Expr
   43     | Expr OP_GT Expr
   44     | Expr OP_LT Expr
   45     | Expr OP_GE Expr
   46     | Expr OP_LE Expr
   47     | Expr OP_SHL Expr
   48     | Expr OP_SHR Expr
   49     | Expr OP_ADD Expr
   50     | Expr OP_SUB Expr
   51     | Expr OP_STAR Expr
   52     | Expr OP_DIV Expr
   53     | Expr OP_MOD Expr
   54     | LP Expr RP
   55     | ID
   56     | FLOAT
   57     | INT
   58     | CHAR
   59     | ID LP Args RP
   60     | ID LP RP
   61     | Expr LB Expr RB

   62 Args: Expr COMMA Args
   63     | Expr


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE_INT (258) 8
TYPE_CHAR (259) 10
TYPE_FLOAT (260) 9
INT (261) 12 57
FLOAT (262) 56
CHAR (263) 58
ID (264) 11 13 14 55 59 60
STRING (265)
VOID (266)
RETURN (267) 30
IF (268) 31 32
ELSE (269) 32
WHILE (270) 33
FOR (271) 34
BREAK (272) 35
CONTINUE (273) 36
POINT (274)
SEMI (275) 4 23 28 30 34 35 36
COMMA (276) 7 15 25 62
S_QUOTA (277)
QUOTA (278)
LP (279) 13 14 31 32 33 34 54 59 60
RP (280) 13 14 31 32 33 34 54 59 60
LB (281) 12 61
RB (282) 12 61
LC (283) 18
RC (284) 18
OP_STAR (285) 51
OP_DIV (286) 52
OP_MOD (287) 53
OP_ADD (288) 49
OP_SUB (289) 50
OP_SHL (290) 47
OP_SHR (291) 48
OP_GT (292) 43
OP_LT (293) 44
OP_GE (294) 45
OP_LE (295) 46
OP_EQ (296) 41
OP_NEQ (297) 42
OP_BIT_AND (298) 40
OP_BIT_XOR (299) 39
OP_BIT_OR (300) 38
OP_ASSIGN (301) 27 37
LOWER_THAN_ELSE (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
DefDecList (50)
    on left: 2 3, on right: 1 3
DefDec (51)
    on left: 4 5, on right: 3
VarDecList (52)
    on left: 6 7, on right: 4 7
Specifier (53)
    on left: 8 9 10, on right: 4 5 17 23
VarDec (54)
    on left: 11 12, on right: 6 7 12 17 26 27
FunDec (55)
    on left: 13 14, on right: 5
ParaList (56)
    on left: 15 16, on right: 13 15
ParaDec (57)
    on left: 17, on right: 15 16
BLOCK (58)
    on left: 18, on right: 5 29
SentenceList (59)
    on left: 19 20, on right: 18 19
Sentence (60)
    on left: 21 22, on right: 19
Def (61)
    on left: 23, on right: 21
DecList (62)
    on left: 24 25, on right: 23 25
Dec (63)
    on left: 26 27, on right: 24 25
Stmt (64)
    on left: 28 29 30 31 32 33 34 35 36, on right: 22 31 32 33 34
Expr (65)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60 61, on right: 27 28 30 31 32 33 34 37 38 39 40
    41 42 43 44 45 46 47 48 49 50 51 52 53 54 61 62 63
Args (66)
    on left: 62 63, on right: 59 62


State 0

    0 $accept: . Program $end

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefDecList)

    Program     go to state 4
    DefDecList  go to state 5
    DefDec      go to state 6
    Specifier   go to state 7


State 1

    8 Specifier: TYPE_INT .

    $default  reduce using rule 8 (Specifier)


State 2

   10 Specifier: TYPE_CHAR .

    $default  reduce using rule 10 (Specifier)


State 3

    9 Specifier: TYPE_FLOAT .

    $default  reduce using rule 9 (Specifier)


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 8


State 5

    1 Program: DefDecList .

    $default  reduce using rule 1 (Program)


State 6

    3 DefDecList: DefDec . DefDecList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefDecList)

    DefDecList  go to state 9
    DefDec      go to state 6
    Specifier   go to state 7


State 7

    4 DefDec: Specifier . VarDecList SEMI
    5       | Specifier . FunDec BLOCK

    ID  shift, and go to state 10

    VarDecList  go to state 11
    VarDec      go to state 12
    FunDec      go to state 13


State 8

    0 $accept: Program $end .

    $default  accept


State 9

    3 DefDecList: DefDec DefDecList .

    $default  reduce using rule 3 (DefDecList)


State 10

   11 VarDec: ID .
   13 FunDec: ID . LP ParaList RP
   14       | ID . LP RP

    LP  shift, and go to state 14

    $default  reduce using rule 11 (VarDec)


State 11

    4 DefDec: Specifier VarDecList . SEMI

    SEMI  shift, and go to state 15


State 12

    6 VarDecList: VarDec .
    7           | VarDec . COMMA VarDecList
   12 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 16
    LB     shift, and go to state 17

    $default  reduce using rule 6 (VarDecList)


State 13

    5 DefDec: Specifier FunDec . BLOCK

    LC  shift, and go to state 18

    BLOCK  go to state 19


State 14

   13 FunDec: ID LP . ParaList RP
   14       | ID LP . RP

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    RP          shift, and go to state 20

    Specifier  go to state 21
    ParaList   go to state 22
    ParaDec    go to state 23


State 15

    4 DefDec: Specifier VarDecList SEMI .

    $default  reduce using rule 4 (DefDec)


State 16

    7 VarDecList: VarDec COMMA . VarDecList

    ID  shift, and go to state 24

    VarDecList  go to state 25
    VarDec      go to state 12


State 17

   12 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 26


State 18

   18 BLOCK: LC . SentenceList RC

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 27
    FLOAT       shift, and go to state 28
    CHAR        shift, and go to state 29
    ID          shift, and go to state 30
    RETURN      shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    BREAK       shift, and go to state 35
    CONTINUE    shift, and go to state 36
    LP          shift, and go to state 37
    LC          shift, and go to state 18

    $default  reduce using rule 20 (SentenceList)

    Specifier     go to state 38
    BLOCK         go to state 39
    SentenceList  go to state 40
    Sentence      go to state 41
    Def           go to state 42
    Stmt          go to state 43
    Expr          go to state 44


State 19

    5 DefDec: Specifier FunDec BLOCK .

    $default  reduce using rule 5 (DefDec)


State 20

   14 FunDec: ID LP RP .

    $default  reduce using rule 14 (FunDec)


State 21

   17 ParaDec: Specifier . VarDec

    ID  shift, and go to state 24

    VarDec  go to state 45


State 22

   13 FunDec: ID LP ParaList . RP

    RP  shift, and go to state 46


State 23

   15 ParaList: ParaDec . COMMA ParaList
   16         | ParaDec .

    COMMA  shift, and go to state 47

    $default  reduce using rule 16 (ParaList)


State 24

   11 VarDec: ID .

    $default  reduce using rule 11 (VarDec)


State 25

    7 VarDecList: VarDec COMMA VarDecList .

    $default  reduce using rule 7 (VarDecList)


State 26

   12 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 48


State 27

   57 Expr: INT .

    $default  reduce using rule 57 (Expr)


State 28

   56 Expr: FLOAT .

    $default  reduce using rule 56 (Expr)


State 29

   58 Expr: CHAR .

    $default  reduce using rule 58 (Expr)


State 30

   55 Expr: ID .
   59     | ID . LP Args RP
   60     | ID . LP RP

    LP  shift, and go to state 49

    $default  reduce using rule 55 (Expr)


State 31

   30 Stmt: RETURN . Expr SEMI

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 50


State 32

   31 Stmt: IF . LP Expr RP Stmt
   32     | IF . LP Expr RP Stmt ELSE Stmt

    LP  shift, and go to state 51


State 33

   33 Stmt: WHILE . LP Expr RP Stmt

    LP  shift, and go to state 52


State 34

   34 Stmt: FOR . LP Expr SEMI Expr SEMI Expr SEMI RP Stmt

    LP  shift, and go to state 53


State 35

   35 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 54


State 36

   36 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 55


State 37

   54 Expr: LP . Expr RP

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 56


State 38

   23 Def: Specifier . DecList SEMI

    ID  shift, and go to state 24

    VarDec   go to state 57
    DecList  go to state 58
    Dec      go to state 59


State 39

   29 Stmt: BLOCK .

    $default  reduce using rule 29 (Stmt)


State 40

   18 BLOCK: LC SentenceList . RC

    RC  shift, and go to state 60


State 41

   19 SentenceList: Sentence . SentenceList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 27
    FLOAT       shift, and go to state 28
    CHAR        shift, and go to state 29
    ID          shift, and go to state 30
    RETURN      shift, and go to state 31
    IF          shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    BREAK       shift, and go to state 35
    CONTINUE    shift, and go to state 36
    LP          shift, and go to state 37
    LC          shift, and go to state 18

    $default  reduce using rule 20 (SentenceList)

    Specifier     go to state 38
    BLOCK         go to state 39
    SentenceList  go to state 61
    Sentence      go to state 41
    Def           go to state 42
    Stmt          go to state 43
    Expr          go to state 44


State 42

   21 Sentence: Def .

    $default  reduce using rule 21 (Sentence)


State 43

   22 Sentence: Stmt .

    $default  reduce using rule 22 (Sentence)


State 44

   28 Stmt: Expr . SEMI
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    SEMI        shift, and go to state 62
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 45

   12 VarDec: VarDec . LB INT RB
   17 ParaDec: Specifier VarDec .

    LB  shift, and go to state 17

    $default  reduce using rule 17 (ParaDec)


State 46

   13 FunDec: ID LP ParaList RP .

    $default  reduce using rule 13 (FunDec)


State 47

   15 ParaList: ParaDec COMMA . ParaList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    Specifier  go to state 21
    ParaList   go to state 81
    ParaDec    go to state 23


State 48

   12 VarDec: VarDec LB INT RB .

    $default  reduce using rule 12 (VarDec)


State 49

   59 Expr: ID LP . Args RP
   60     | ID LP . RP

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37
    RP     shift, and go to state 82

    Expr  go to state 83
    Args  go to state 84


State 50

   30 Stmt: RETURN Expr . SEMI
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    SEMI        shift, and go to state 85
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 51

   31 Stmt: IF LP . Expr RP Stmt
   32     | IF LP . Expr RP Stmt ELSE Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 86


State 52

   33 Stmt: WHILE LP . Expr RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 87


State 53

   34 Stmt: FOR LP . Expr SEMI Expr SEMI Expr SEMI RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 88


State 54

   35 Stmt: BREAK SEMI .

    $default  reduce using rule 35 (Stmt)


State 55

   36 Stmt: CONTINUE SEMI .

    $default  reduce using rule 36 (Stmt)


State 56

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   54     | LP Expr . RP
   61     | Expr . LB Expr RB

    RP          shift, and go to state 89
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 57

   12 VarDec: VarDec . LB INT RB
   26 Dec: VarDec .
   27    | VarDec . OP_ASSIGN Expr

    LB         shift, and go to state 17
    OP_ASSIGN  shift, and go to state 90

    $default  reduce using rule 26 (Dec)


State 58

   23 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 91


State 59

   24 DecList: Dec .
   25        | Dec . COMMA DecList

    COMMA  shift, and go to state 92

    $default  reduce using rule 24 (DecList)


State 60

   18 BLOCK: LC SentenceList RC .

    $default  reduce using rule 18 (BLOCK)


State 61

   19 SentenceList: Sentence SentenceList .

    $default  reduce using rule 19 (SentenceList)


State 62

   28 Stmt: Expr SEMI .

    $default  reduce using rule 28 (Stmt)


State 63

   61 Expr: Expr LB . Expr RB

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 93


State 64

   51 Expr: Expr OP_STAR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 94


State 65

   52 Expr: Expr OP_DIV . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 95


State 66

   53 Expr: Expr OP_MOD . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 96


State 67

   49 Expr: Expr OP_ADD . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 97


State 68

   50 Expr: Expr OP_SUB . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 98


State 69

   47 Expr: Expr OP_SHL . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 99


State 70

   48 Expr: Expr OP_SHR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 100


State 71

   43 Expr: Expr OP_GT . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 101


State 72

   44 Expr: Expr OP_LT . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 102


State 73

   45 Expr: Expr OP_GE . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 103


State 74

   46 Expr: Expr OP_LE . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 104


State 75

   41 Expr: Expr OP_EQ . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 105


State 76

   42 Expr: Expr OP_NEQ . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 106


State 77

   40 Expr: Expr OP_BIT_AND . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 107


State 78

   39 Expr: Expr OP_BIT_XOR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 108


State 79

   38 Expr: Expr OP_BIT_OR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 109


State 80

   37 Expr: Expr OP_ASSIGN . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 110


State 81

   15 ParaList: ParaDec COMMA ParaList .

    $default  reduce using rule 15 (ParaList)


State 82

   60 Expr: ID LP RP .

    $default  reduce using rule 60 (Expr)


State 83

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB
   62 Args: Expr . COMMA Args
   63     | Expr .

    COMMA       shift, and go to state 111
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80

    $default  reduce using rule 63 (Args)


State 84

   59 Expr: ID LP Args . RP

    RP  shift, and go to state 112


State 85

   30 Stmt: RETURN Expr SEMI .

    $default  reduce using rule 30 (Stmt)


State 86

   31 Stmt: IF LP Expr . RP Stmt
   32     | IF LP Expr . RP Stmt ELSE Stmt
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    RP          shift, and go to state 113
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 87

   33 Stmt: WHILE LP Expr . RP Stmt
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    RP          shift, and go to state 114
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 88

   34 Stmt: FOR LP Expr . SEMI Expr SEMI Expr SEMI RP Stmt
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    SEMI        shift, and go to state 115
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 89

   54 Expr: LP Expr RP .

    $default  reduce using rule 54 (Expr)


State 90

   27 Dec: VarDec OP_ASSIGN . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 116


State 91

   23 Def: Specifier DecList SEMI .

    $default  reduce using rule 23 (Def)


State 92

   25 DecList: Dec COMMA . DecList

    ID  shift, and go to state 24

    VarDec   go to state 57
    DecList  go to state 117
    Dec      go to state 59


State 93

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB
   61     | Expr LB Expr . RB

    LB          shift, and go to state 63
    RB          shift, and go to state 118
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 94

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   51     | Expr OP_STAR Expr .
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB  shift, and go to state 63

    $default  reduce using rule 51 (Expr)


State 95

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   52     | Expr OP_DIV Expr .
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB  shift, and go to state 63

    $default  reduce using rule 52 (Expr)


State 96

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   53     | Expr OP_MOD Expr .
   61     | Expr . LB Expr RB

    LB  shift, and go to state 63

    $default  reduce using rule 53 (Expr)


State 97

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   49     | Expr OP_ADD Expr .
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66

    $default  reduce using rule 49 (Expr)


State 98

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   50     | Expr OP_SUB Expr .
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66

    $default  reduce using rule 50 (Expr)


State 99

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   47     | Expr OP_SHL Expr .
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68

    $default  reduce using rule 47 (Expr)


State 100

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   48     | Expr OP_SHR Expr .
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68

    $default  reduce using rule 48 (Expr)


State 101

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   43     | Expr OP_GT Expr .
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70

    $default  reduce using rule 43 (Expr)


State 102

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   44     | Expr OP_LT Expr .
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70

    $default  reduce using rule 44 (Expr)


State 103

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   45     | Expr OP_GE Expr .
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70

    $default  reduce using rule 45 (Expr)


State 104

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   46     | Expr OP_LE Expr .
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70

    $default  reduce using rule 46 (Expr)


State 105

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   41     | Expr OP_EQ Expr .
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70
    OP_GT    shift, and go to state 71
    OP_LT    shift, and go to state 72
    OP_GE    shift, and go to state 73
    OP_LE    shift, and go to state 74

    $default  reduce using rule 41 (Expr)


State 106

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   42     | Expr OP_NEQ Expr .
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70
    OP_GT    shift, and go to state 71
    OP_LT    shift, and go to state 72
    OP_GE    shift, and go to state 73
    OP_LE    shift, and go to state 74

    $default  reduce using rule 42 (Expr)


State 107

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   40     | Expr OP_BIT_AND Expr .
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB       shift, and go to state 63
    OP_STAR  shift, and go to state 64
    OP_DIV   shift, and go to state 65
    OP_MOD   shift, and go to state 66
    OP_ADD   shift, and go to state 67
    OP_SUB   shift, and go to state 68
    OP_SHL   shift, and go to state 69
    OP_SHR   shift, and go to state 70
    OP_GT    shift, and go to state 71
    OP_LT    shift, and go to state 72
    OP_GE    shift, and go to state 73
    OP_LE    shift, and go to state 74
    OP_EQ    shift, and go to state 75
    OP_NEQ   shift, and go to state 76

    $default  reduce using rule 40 (Expr)


State 108

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   39     | Expr OP_BIT_XOR Expr .
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77

    $default  reduce using rule 39 (Expr)


State 109

   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   38     | Expr OP_BIT_OR Expr .
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78

    $default  reduce using rule 38 (Expr)


State 110

   37 Expr: Expr . OP_ASSIGN Expr
   37     | Expr OP_ASSIGN Expr .
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80

    $default  reduce using rule 37 (Expr)


State 111

   62 Args: Expr COMMA . Args

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 83
    Args  go to state 119


State 112

   59 Expr: ID LP Args RP .

    $default  reduce using rule 59 (Expr)


State 113

   31 Stmt: IF LP Expr RP . Stmt
   32     | IF LP Expr RP . Stmt ELSE Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    FOR       shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    LP        shift, and go to state 37
    LC        shift, and go to state 18

    BLOCK  go to state 39
    Stmt   go to state 120
    Expr   go to state 44


State 114

   33 Stmt: WHILE LP Expr RP . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    FOR       shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    LP        shift, and go to state 37
    LC        shift, and go to state 18

    BLOCK  go to state 39
    Stmt   go to state 121
    Expr   go to state 44


State 115

   34 Stmt: FOR LP Expr SEMI . Expr SEMI Expr SEMI RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 122


State 116

   27 Dec: VarDec OP_ASSIGN Expr .
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80

    $default  reduce using rule 27 (Dec)


State 117

   25 DecList: Dec COMMA DecList .

    $default  reduce using rule 25 (DecList)


State 118

   61 Expr: Expr LB Expr RB .

    $default  reduce using rule 61 (Expr)


State 119

   62 Args: Expr COMMA Args .

    $default  reduce using rule 62 (Args)


State 120

   31 Stmt: IF LP Expr RP Stmt .
   32     | IF LP Expr RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 31 (Stmt)


State 121

   33 Stmt: WHILE LP Expr RP Stmt .

    $default  reduce using rule 33 (Stmt)


State 122

   34 Stmt: FOR LP Expr SEMI Expr . SEMI Expr SEMI RP Stmt
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    SEMI        shift, and go to state 124
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 123

   32 Stmt: IF LP Expr RP Stmt ELSE . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    FOR       shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    LP        shift, and go to state 37
    LC        shift, and go to state 18

    BLOCK  go to state 39
    Stmt   go to state 125
    Expr   go to state 44


State 124

   34 Stmt: FOR LP Expr SEMI Expr SEMI . Expr SEMI RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 37

    Expr  go to state 126


State 125

   32 Stmt: IF LP Expr RP Stmt ELSE Stmt .

    $default  reduce using rule 32 (Stmt)


State 126

   34 Stmt: FOR LP Expr SEMI Expr SEMI Expr . SEMI RP Stmt
   37 Expr: Expr . OP_ASSIGN Expr
   38     | Expr . OP_BIT_OR Expr
   39     | Expr . OP_BIT_XOR Expr
   40     | Expr . OP_BIT_AND Expr
   41     | Expr . OP_EQ Expr
   42     | Expr . OP_NEQ Expr
   43     | Expr . OP_GT Expr
   44     | Expr . OP_LT Expr
   45     | Expr . OP_GE Expr
   46     | Expr . OP_LE Expr
   47     | Expr . OP_SHL Expr
   48     | Expr . OP_SHR Expr
   49     | Expr . OP_ADD Expr
   50     | Expr . OP_SUB Expr
   51     | Expr . OP_STAR Expr
   52     | Expr . OP_DIV Expr
   53     | Expr . OP_MOD Expr
   61     | Expr . LB Expr RB

    SEMI        shift, and go to state 127
    LB          shift, and go to state 63
    OP_STAR     shift, and go to state 64
    OP_DIV      shift, and go to state 65
    OP_MOD      shift, and go to state 66
    OP_ADD      shift, and go to state 67
    OP_SUB      shift, and go to state 68
    OP_SHL      shift, and go to state 69
    OP_SHR      shift, and go to state 70
    OP_GT       shift, and go to state 71
    OP_LT       shift, and go to state 72
    OP_GE       shift, and go to state 73
    OP_LE       shift, and go to state 74
    OP_EQ       shift, and go to state 75
    OP_NEQ      shift, and go to state 76
    OP_BIT_AND  shift, and go to state 77
    OP_BIT_XOR  shift, and go to state 78
    OP_BIT_OR   shift, and go to state 79
    OP_ASSIGN   shift, and go to state 80


State 127

   34 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI . RP Stmt

    RP  shift, and go to state 128


State 128

   34 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI RP . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    FOR       shift, and go to state 34
    BREAK     shift, and go to state 35
    CONTINUE  shift, and go to state 36
    LP        shift, and go to state 37
    LC        shift, and go to state 18

    BLOCK  go to state 39
    Stmt   go to state 129
    Expr   go to state 44


State 129

   34 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI RP Stmt .

    $default  reduce using rule 34 (Stmt)
