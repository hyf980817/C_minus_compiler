Terminals unused in grammar

   STRING
   VOID
   POINT
   S_QUOTA
   QUOTA


Grammar

    0 $accept: Program $end

    1 Program: DefDecList

    2 DefDecList: %empty
    3           | DefDec DefDecList

    4 VarDefStmt: TYPE VarDecList SEMI

    5 DefDec: VarDefStmt
    6       | TYPE FunDec BLOCK

    7 VarDecList: VarDec
    8           | VarDec COMMA VarDecList

    9 TYPE: TYPE_INT
   10     | TYPE_FLOAT
   11     | TYPE_CHAR

   12 VarDec: ID
   13       | ID OP_ASSIGN Expr
   14       | VarDec LB INT RB

   15 FunDec: ID LP ParaList RP
   16       | ID LP RP

   17 ParaList: ParaDec COMMA ParaList
   18         | ParaDec

   19 ParaDec: TYPE VarDec

   20 BLOCK: LC SentenceList RC

   21 SentenceList: Sentence SentenceList
   22             | %empty

   23 Sentence: VarDefStmt
   24         | Stmt

   25 Stmt: Expr SEMI
   26     | BLOCK
   27     | RETURN Expr SEMI
   28     | IF LP Expr RP Stmt
   29     | IF LP Expr RP Stmt ELSE Stmt
   30     | WHILE LP Expr RP Stmt
   31     | FOR LP Expr SEMI Expr SEMI Expr SEMI RP Stmt
   32     | BREAK SEMI
   33     | CONTINUE SEMI

   34 Expr: Expr OP_ASSIGN Expr
   35     | Expr OP_BIT_OR Expr
   36     | Expr OP_BIT_XOR Expr
   37     | Expr OP_BIT_AND Expr
   38     | Expr OP_EQ Expr
   39     | Expr OP_NEQ Expr
   40     | Expr OP_GT Expr
   41     | Expr OP_LT Expr
   42     | Expr OP_GE Expr
   43     | Expr OP_LE Expr
   44     | Expr OP_SHL Expr
   45     | Expr OP_SHR Expr
   46     | Expr OP_ADD Expr
   47     | Expr OP_SUB Expr
   48     | Expr OP_STAR Expr
   49     | Expr OP_DIV Expr
   50     | Expr OP_MOD Expr
   51     | LP Expr RP
   52     | ID
   53     | FLOAT
   54     | INT
   55     | CHAR
   56     | ID LP Args RP
   57     | ID LP RP
   58     | Expr LB Expr RB

   59 Args: Expr COMMA Args
   60     | Expr


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE_INT (258) 9
TYPE_CHAR (259) 11
TYPE_FLOAT (260) 10
INT (261) 14 54
FLOAT (262) 53
CHAR (263) 55
ID (264) 12 13 15 16 52 56 57
STRING (265)
VOID (266)
RETURN (267) 27
IF (268) 28 29
ELSE (269) 29
WHILE (270) 30
FOR (271) 31
BREAK (272) 32
CONTINUE (273) 33
POINT (274)
SEMI (275) 4 25 27 31 32 33
COMMA (276) 8 17 59
S_QUOTA (277)
QUOTA (278)
LP (279) 15 16 28 29 30 31 51 56 57
RP (280) 15 16 28 29 30 31 51 56 57
LB (281) 14 58
RB (282) 14 58
LC (283) 20
RC (284) 20
OP_STAR (285) 48
OP_DIV (286) 49
OP_MOD (287) 50
OP_ADD (288) 46
OP_SUB (289) 47
OP_SHL (290) 44
OP_SHR (291) 45
OP_GT (292) 40
OP_LT (293) 41
OP_GE (294) 42
OP_LE (295) 43
OP_EQ (296) 38
OP_NEQ (297) 39
OP_BIT_AND (298) 37
OP_BIT_XOR (299) 36
OP_BIT_OR (300) 35
OP_ASSIGN (301) 13 34
LOWER_THAN_ELSE (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
DefDecList (50)
    on left: 2 3, on right: 1 3
VarDefStmt (51)
    on left: 4, on right: 5 23
DefDec (52)
    on left: 5 6, on right: 3
VarDecList (53)
    on left: 7 8, on right: 4 8
TYPE (54)
    on left: 9 10 11, on right: 4 6 19
VarDec (55)
    on left: 12 13 14, on right: 7 8 14 19
FunDec (56)
    on left: 15 16, on right: 6
ParaList (57)
    on left: 17 18, on right: 15 17
ParaDec (58)
    on left: 19, on right: 17 18
BLOCK (59)
    on left: 20, on right: 6 26
SentenceList (60)
    on left: 21 22, on right: 20 21
Sentence (61)
    on left: 23 24, on right: 21
Stmt (62)
    on left: 25 26 27 28 29 30 31 32 33, on right: 24 28 29 30 31
Expr (63)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    52 53 54 55 56 57 58, on right: 13 25 27 28 29 30 31 34 35 36 37
    38 39 40 41 42 43 44 45 46 47 48 49 50 51 58 59 60
Args (64)
    on left: 59 60, on right: 56 59


State 0

    0 $accept: . Program $end

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefDecList)

    Program     go to state 4
    DefDecList  go to state 5
    VarDefStmt  go to state 6
    DefDec      go to state 7
    TYPE        go to state 8


State 1

    9 TYPE: TYPE_INT .

    $default  reduce using rule 9 (TYPE)


State 2

   11 TYPE: TYPE_CHAR .

    $default  reduce using rule 11 (TYPE)


State 3

   10 TYPE: TYPE_FLOAT .

    $default  reduce using rule 10 (TYPE)


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 5

    1 Program: DefDecList .

    $default  reduce using rule 1 (Program)


State 6

    5 DefDec: VarDefStmt .

    $default  reduce using rule 5 (DefDec)


State 7

    3 DefDecList: DefDec . DefDecList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefDecList)

    DefDecList  go to state 10
    VarDefStmt  go to state 6
    DefDec      go to state 7
    TYPE        go to state 8


State 8

    4 VarDefStmt: TYPE . VarDecList SEMI
    6 DefDec: TYPE . FunDec BLOCK

    ID  shift, and go to state 11

    VarDecList  go to state 12
    VarDec      go to state 13
    FunDec      go to state 14


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 DefDecList: DefDec DefDecList .

    $default  reduce using rule 3 (DefDecList)


State 11

   12 VarDec: ID .
   13       | ID . OP_ASSIGN Expr
   15 FunDec: ID . LP ParaList RP
   16       | ID . LP RP

    LP         shift, and go to state 15
    OP_ASSIGN  shift, and go to state 16

    $default  reduce using rule 12 (VarDec)


State 12

    4 VarDefStmt: TYPE VarDecList . SEMI

    SEMI  shift, and go to state 17


State 13

    7 VarDecList: VarDec .
    8           | VarDec . COMMA VarDecList
   14 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 18
    LB     shift, and go to state 19

    $default  reduce using rule 7 (VarDecList)


State 14

    6 DefDec: TYPE FunDec . BLOCK

    LC  shift, and go to state 20

    BLOCK  go to state 21


State 15

   15 FunDec: ID LP . ParaList RP
   16       | ID LP . RP

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    RP          shift, and go to state 22

    TYPE      go to state 23
    ParaList  go to state 24
    ParaDec   go to state 25


State 16

   13 VarDec: ID OP_ASSIGN . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 31


State 17

    4 VarDefStmt: TYPE VarDecList SEMI .

    $default  reduce using rule 4 (VarDefStmt)


State 18

    8 VarDecList: VarDec COMMA . VarDecList

    ID  shift, and go to state 32

    VarDecList  go to state 33
    VarDec      go to state 13


State 19

   14 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 34


State 20

   20 BLOCK: LC . SentenceList RC

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    CHAR        shift, and go to state 28
    ID          shift, and go to state 29
    RETURN      shift, and go to state 35
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    BREAK       shift, and go to state 39
    CONTINUE    shift, and go to state 40
    LP          shift, and go to state 30
    LC          shift, and go to state 20

    $default  reduce using rule 22 (SentenceList)

    VarDefStmt    go to state 41
    TYPE          go to state 42
    BLOCK         go to state 43
    SentenceList  go to state 44
    Sentence      go to state 45
    Stmt          go to state 46
    Expr          go to state 47


State 21

    6 DefDec: TYPE FunDec BLOCK .

    $default  reduce using rule 6 (DefDec)


State 22

   16 FunDec: ID LP RP .

    $default  reduce using rule 16 (FunDec)


State 23

   19 ParaDec: TYPE . VarDec

    ID  shift, and go to state 32

    VarDec  go to state 48


State 24

   15 FunDec: ID LP ParaList . RP

    RP  shift, and go to state 49


State 25

   17 ParaList: ParaDec . COMMA ParaList
   18         | ParaDec .

    COMMA  shift, and go to state 50

    $default  reduce using rule 18 (ParaList)


State 26

   54 Expr: INT .

    $default  reduce using rule 54 (Expr)


State 27

   53 Expr: FLOAT .

    $default  reduce using rule 53 (Expr)


State 28

   55 Expr: CHAR .

    $default  reduce using rule 55 (Expr)


State 29

   52 Expr: ID .
   56     | ID . LP Args RP
   57     | ID . LP RP

    LP  shift, and go to state 51

    $default  reduce using rule 52 (Expr)


State 30

   51 Expr: LP . Expr RP

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 52


State 31

   13 VarDec: ID OP_ASSIGN Expr .
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70

    $default  reduce using rule 13 (VarDec)


State 32

   12 VarDec: ID .
   13       | ID . OP_ASSIGN Expr

    OP_ASSIGN  shift, and go to state 16

    $default  reduce using rule 12 (VarDec)


State 33

    8 VarDecList: VarDec COMMA VarDecList .

    $default  reduce using rule 8 (VarDecList)


State 34

   14 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 71


State 35

   27 Stmt: RETURN . Expr SEMI

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 72


State 36

   28 Stmt: IF . LP Expr RP Stmt
   29     | IF . LP Expr RP Stmt ELSE Stmt

    LP  shift, and go to state 73


State 37

   30 Stmt: WHILE . LP Expr RP Stmt

    LP  shift, and go to state 74


State 38

   31 Stmt: FOR . LP Expr SEMI Expr SEMI Expr SEMI RP Stmt

    LP  shift, and go to state 75


State 39

   32 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 76


State 40

   33 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 77


State 41

   23 Sentence: VarDefStmt .

    $default  reduce using rule 23 (Sentence)


State 42

    4 VarDefStmt: TYPE . VarDecList SEMI

    ID  shift, and go to state 32

    VarDecList  go to state 12
    VarDec      go to state 13


State 43

   26 Stmt: BLOCK .

    $default  reduce using rule 26 (Stmt)


State 44

   20 BLOCK: LC SentenceList . RC

    RC  shift, and go to state 78


State 45

   21 SentenceList: Sentence . SentenceList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 26
    FLOAT       shift, and go to state 27
    CHAR        shift, and go to state 28
    ID          shift, and go to state 29
    RETURN      shift, and go to state 35
    IF          shift, and go to state 36
    WHILE       shift, and go to state 37
    FOR         shift, and go to state 38
    BREAK       shift, and go to state 39
    CONTINUE    shift, and go to state 40
    LP          shift, and go to state 30
    LC          shift, and go to state 20

    $default  reduce using rule 22 (SentenceList)

    VarDefStmt    go to state 41
    TYPE          go to state 42
    BLOCK         go to state 43
    SentenceList  go to state 79
    Sentence      go to state 45
    Stmt          go to state 46
    Expr          go to state 47


State 46

   24 Sentence: Stmt .

    $default  reduce using rule 24 (Sentence)


State 47

   25 Stmt: Expr . SEMI
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    SEMI        shift, and go to state 80
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 48

   14 VarDec: VarDec . LB INT RB
   19 ParaDec: TYPE VarDec .

    LB  shift, and go to state 19

    $default  reduce using rule 19 (ParaDec)


State 49

   15 FunDec: ID LP ParaList RP .

    $default  reduce using rule 15 (FunDec)


State 50

   17 ParaList: ParaDec COMMA . ParaList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    TYPE      go to state 23
    ParaList  go to state 81
    ParaDec   go to state 25


State 51

   56 Expr: ID LP . Args RP
   57     | ID LP . RP

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30
    RP     shift, and go to state 82

    Expr  go to state 83
    Args  go to state 84


State 52

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   51     | LP Expr . RP
   58     | Expr . LB Expr RB

    RP          shift, and go to state 85
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 53

   58 Expr: Expr LB . Expr RB

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 86


State 54

   48 Expr: Expr OP_STAR . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 87


State 55

   49 Expr: Expr OP_DIV . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 88


State 56

   50 Expr: Expr OP_MOD . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 89


State 57

   46 Expr: Expr OP_ADD . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 90


State 58

   47 Expr: Expr OP_SUB . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 91


State 59

   44 Expr: Expr OP_SHL . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 92


State 60

   45 Expr: Expr OP_SHR . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 93


State 61

   40 Expr: Expr OP_GT . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 94


State 62

   41 Expr: Expr OP_LT . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 95


State 63

   42 Expr: Expr OP_GE . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 96


State 64

   43 Expr: Expr OP_LE . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 97


State 65

   38 Expr: Expr OP_EQ . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 98


State 66

   39 Expr: Expr OP_NEQ . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 99


State 67

   37 Expr: Expr OP_BIT_AND . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 100


State 68

   36 Expr: Expr OP_BIT_XOR . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 101


State 69

   35 Expr: Expr OP_BIT_OR . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 102


State 70

   34 Expr: Expr OP_ASSIGN . Expr

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 103


State 71

   14 VarDec: VarDec LB INT RB .

    $default  reduce using rule 14 (VarDec)


State 72

   27 Stmt: RETURN Expr . SEMI
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    SEMI        shift, and go to state 104
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 73

   28 Stmt: IF LP . Expr RP Stmt
   29     | IF LP . Expr RP Stmt ELSE Stmt

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 105


State 74

   30 Stmt: WHILE LP . Expr RP Stmt

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 106


State 75

   31 Stmt: FOR LP . Expr SEMI Expr SEMI Expr SEMI RP Stmt

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 107


State 76

   32 Stmt: BREAK SEMI .

    $default  reduce using rule 32 (Stmt)


State 77

   33 Stmt: CONTINUE SEMI .

    $default  reduce using rule 33 (Stmt)


State 78

   20 BLOCK: LC SentenceList RC .

    $default  reduce using rule 20 (BLOCK)


State 79

   21 SentenceList: Sentence SentenceList .

    $default  reduce using rule 21 (SentenceList)


State 80

   25 Stmt: Expr SEMI .

    $default  reduce using rule 25 (Stmt)


State 81

   17 ParaList: ParaDec COMMA ParaList .

    $default  reduce using rule 17 (ParaList)


State 82

   57 Expr: ID LP RP .

    $default  reduce using rule 57 (Expr)


State 83

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB
   59 Args: Expr . COMMA Args
   60     | Expr .

    COMMA       shift, and go to state 108
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70

    $default  reduce using rule 60 (Args)


State 84

   56 Expr: ID LP Args . RP

    RP  shift, and go to state 109


State 85

   51 Expr: LP Expr RP .

    $default  reduce using rule 51 (Expr)


State 86

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB
   58     | Expr LB Expr . RB

    LB          shift, and go to state 53
    RB          shift, and go to state 110
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 87

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   48     | Expr OP_STAR Expr .
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB  shift, and go to state 53

    $default  reduce using rule 48 (Expr)


State 88

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   49     | Expr OP_DIV Expr .
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB  shift, and go to state 53

    $default  reduce using rule 49 (Expr)


State 89

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   50     | Expr OP_MOD Expr .
   58     | Expr . LB Expr RB

    LB  shift, and go to state 53

    $default  reduce using rule 50 (Expr)


State 90

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   46     | Expr OP_ADD Expr .
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56

    $default  reduce using rule 46 (Expr)


State 91

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   47     | Expr OP_SUB Expr .
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56

    $default  reduce using rule 47 (Expr)


State 92

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   44     | Expr OP_SHL Expr .
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58

    $default  reduce using rule 44 (Expr)


State 93

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   45     | Expr OP_SHR Expr .
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58

    $default  reduce using rule 45 (Expr)


State 94

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   40     | Expr OP_GT Expr .
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60

    $default  reduce using rule 40 (Expr)


State 95

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   41     | Expr OP_LT Expr .
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60

    $default  reduce using rule 41 (Expr)


State 96

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   42     | Expr OP_GE Expr .
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60

    $default  reduce using rule 42 (Expr)


State 97

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   43     | Expr OP_LE Expr .
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60

    $default  reduce using rule 43 (Expr)


State 98

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   38     | Expr OP_EQ Expr .
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60
    OP_GT    shift, and go to state 61
    OP_LT    shift, and go to state 62
    OP_GE    shift, and go to state 63
    OP_LE    shift, and go to state 64

    $default  reduce using rule 38 (Expr)


State 99

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   39     | Expr OP_NEQ Expr .
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60
    OP_GT    shift, and go to state 61
    OP_LT    shift, and go to state 62
    OP_GE    shift, and go to state 63
    OP_LE    shift, and go to state 64

    $default  reduce using rule 39 (Expr)


State 100

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   37     | Expr OP_BIT_AND Expr .
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB       shift, and go to state 53
    OP_STAR  shift, and go to state 54
    OP_DIV   shift, and go to state 55
    OP_MOD   shift, and go to state 56
    OP_ADD   shift, and go to state 57
    OP_SUB   shift, and go to state 58
    OP_SHL   shift, and go to state 59
    OP_SHR   shift, and go to state 60
    OP_GT    shift, and go to state 61
    OP_LT    shift, and go to state 62
    OP_GE    shift, and go to state 63
    OP_LE    shift, and go to state 64
    OP_EQ    shift, and go to state 65
    OP_NEQ   shift, and go to state 66

    $default  reduce using rule 37 (Expr)


State 101

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   36     | Expr OP_BIT_XOR Expr .
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67

    $default  reduce using rule 36 (Expr)


State 102

   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   35     | Expr OP_BIT_OR Expr .
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68

    $default  reduce using rule 35 (Expr)


State 103

   34 Expr: Expr . OP_ASSIGN Expr
   34     | Expr OP_ASSIGN Expr .
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70

    $default  reduce using rule 34 (Expr)


State 104

   27 Stmt: RETURN Expr SEMI .

    $default  reduce using rule 27 (Stmt)


State 105

   28 Stmt: IF LP Expr . RP Stmt
   29     | IF LP Expr . RP Stmt ELSE Stmt
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    RP          shift, and go to state 111
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 106

   30 Stmt: WHILE LP Expr . RP Stmt
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    RP          shift, and go to state 112
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 107

   31 Stmt: FOR LP Expr . SEMI Expr SEMI Expr SEMI RP Stmt
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    SEMI        shift, and go to state 113
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 108

   59 Args: Expr COMMA . Args

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 83
    Args  go to state 114


State 109

   56 Expr: ID LP Args RP .

    $default  reduce using rule 56 (Expr)


State 110

   58 Expr: Expr LB Expr RB .

    $default  reduce using rule 58 (Expr)


State 111

   28 Stmt: IF LP Expr RP . Stmt
   29     | IF LP Expr RP . Stmt ELSE Stmt

    INT       shift, and go to state 26
    FLOAT     shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 29
    RETURN    shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    BREAK     shift, and go to state 39
    CONTINUE  shift, and go to state 40
    LP        shift, and go to state 30
    LC        shift, and go to state 20

    BLOCK  go to state 43
    Stmt   go to state 115
    Expr   go to state 47


State 112

   30 Stmt: WHILE LP Expr RP . Stmt

    INT       shift, and go to state 26
    FLOAT     shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 29
    RETURN    shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    BREAK     shift, and go to state 39
    CONTINUE  shift, and go to state 40
    LP        shift, and go to state 30
    LC        shift, and go to state 20

    BLOCK  go to state 43
    Stmt   go to state 116
    Expr   go to state 47


State 113

   31 Stmt: FOR LP Expr SEMI . Expr SEMI Expr SEMI RP Stmt

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 117


State 114

   59 Args: Expr COMMA Args .

    $default  reduce using rule 59 (Args)


State 115

   28 Stmt: IF LP Expr RP Stmt .
   29     | IF LP Expr RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 118

    $default  reduce using rule 28 (Stmt)


State 116

   30 Stmt: WHILE LP Expr RP Stmt .

    $default  reduce using rule 30 (Stmt)


State 117

   31 Stmt: FOR LP Expr SEMI Expr . SEMI Expr SEMI RP Stmt
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    SEMI        shift, and go to state 119
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 118

   29 Stmt: IF LP Expr RP Stmt ELSE . Stmt

    INT       shift, and go to state 26
    FLOAT     shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 29
    RETURN    shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    BREAK     shift, and go to state 39
    CONTINUE  shift, and go to state 40
    LP        shift, and go to state 30
    LC        shift, and go to state 20

    BLOCK  go to state 43
    Stmt   go to state 120
    Expr   go to state 47


State 119

   31 Stmt: FOR LP Expr SEMI Expr SEMI . Expr SEMI RP Stmt

    INT    shift, and go to state 26
    FLOAT  shift, and go to state 27
    CHAR   shift, and go to state 28
    ID     shift, and go to state 29
    LP     shift, and go to state 30

    Expr  go to state 121


State 120

   29 Stmt: IF LP Expr RP Stmt ELSE Stmt .

    $default  reduce using rule 29 (Stmt)


State 121

   31 Stmt: FOR LP Expr SEMI Expr SEMI Expr . SEMI RP Stmt
   34 Expr: Expr . OP_ASSIGN Expr
   35     | Expr . OP_BIT_OR Expr
   36     | Expr . OP_BIT_XOR Expr
   37     | Expr . OP_BIT_AND Expr
   38     | Expr . OP_EQ Expr
   39     | Expr . OP_NEQ Expr
   40     | Expr . OP_GT Expr
   41     | Expr . OP_LT Expr
   42     | Expr . OP_GE Expr
   43     | Expr . OP_LE Expr
   44     | Expr . OP_SHL Expr
   45     | Expr . OP_SHR Expr
   46     | Expr . OP_ADD Expr
   47     | Expr . OP_SUB Expr
   48     | Expr . OP_STAR Expr
   49     | Expr . OP_DIV Expr
   50     | Expr . OP_MOD Expr
   58     | Expr . LB Expr RB

    SEMI        shift, and go to state 122
    LB          shift, and go to state 53
    OP_STAR     shift, and go to state 54
    OP_DIV      shift, and go to state 55
    OP_MOD      shift, and go to state 56
    OP_ADD      shift, and go to state 57
    OP_SUB      shift, and go to state 58
    OP_SHL      shift, and go to state 59
    OP_SHR      shift, and go to state 60
    OP_GT       shift, and go to state 61
    OP_LT       shift, and go to state 62
    OP_GE       shift, and go to state 63
    OP_LE       shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_BIT_AND  shift, and go to state 67
    OP_BIT_XOR  shift, and go to state 68
    OP_BIT_OR   shift, and go to state 69
    OP_ASSIGN   shift, and go to state 70


State 122

   31 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI . RP Stmt

    RP  shift, and go to state 123


State 123

   31 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI RP . Stmt

    INT       shift, and go to state 26
    FLOAT     shift, and go to state 27
    CHAR      shift, and go to state 28
    ID        shift, and go to state 29
    RETURN    shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    BREAK     shift, and go to state 39
    CONTINUE  shift, and go to state 40
    LP        shift, and go to state 30
    LC        shift, and go to state 20

    BLOCK  go to state 43
    Stmt   go to state 124
    Expr   go to state 47


State 124

   31 Stmt: FOR LP Expr SEMI Expr SEMI Expr SEMI RP Stmt .

    $default  reduce using rule 31 (Stmt)
