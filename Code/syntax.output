Terminals unused in grammar

   STRING
   VOID
   POINT
   S_QUOTA
   QUOTA


Grammar

    0 $accept: Program $end

    1 Program: DefList

    2 DefList: %empty
    3        | VarDefStmt DefList
    4        | FunDef DefList

    5 VarDefStmt: TYPE VarDecList SEMI

    6 FunDef: TYPE FunDec BLOCK

    7 VarDecList: VarDec
    8           | VarDec COMMA VarDecList

    9 TYPE: TYPE_INT
   10     | TYPE_FLOAT
   11     | TYPE_CHAR

   12 VarDec: ID
   13       | ID OP_ASSIGN Expr
   14       | VarDec LB INT RB

   15 FunDec: ID LP ParaList RP
   16       | ID LP RP

   17 ParaList: ParaDec COMMA ParaList
   18         | ParaDec

   19 ParaDec: TYPE VarDec

   20 BLOCK: LC SentenceList RC

   21 SentenceList: Sentence SentenceList
   22             | %empty

   23 Sentence: VarDefStmt
   24         | Stmt
   25         | error SEMI
   26         | error

   27 Stmt: Expr SEMI
   28     | BLOCK
   29     | RETURN Expr SEMI
   30     | IF LP Expr RP Stmt
   31     | IF LP Expr RP Stmt ELSE Stmt
   32     | WHILE LP Expr RP Stmt
   33     | FOR LP Expr SEMI Expr SEMI Expr RP Stmt
   34     | BREAK SEMI
   35     | CONTINUE SEMI

   36 Expr: Expr OP_ASSIGN Expr
   37     | Expr OP_BIT_OR Expr
   38     | Expr OP_BIT_XOR Expr
   39     | Expr OP_BIT_AND Expr
   40     | Expr OP_EQ Expr
   41     | Expr OP_NEQ Expr
   42     | Expr OP_GT Expr
   43     | Expr OP_LT Expr
   44     | Expr OP_GE Expr
   45     | Expr OP_LE Expr
   46     | Expr OP_SHL Expr
   47     | Expr OP_SHR Expr
   48     | Expr OP_ADD Expr
   49     | Expr OP_SUB Expr
   50     | Expr OP_STAR Expr
   51     | Expr OP_DIV Expr
   52     | Expr OP_MOD Expr
   53     | LP Expr RP
   54     | ID
   55     | FLOAT
   56     | INT
   57     | CHAR
   58     | ID LP Args RP
   59     | ID LP RP
   60     | Expr LB Expr RB

   61 Args: Expr COMMA Args
   62     | Expr


Terminals, with rules where they appear

$end (0) 0
error (256) 25 26
TYPE_INT (258) 9
TYPE_CHAR (259) 11
TYPE_FLOAT (260) 10
INT (261) 14 56
FLOAT (262) 55
CHAR (263) 57
ID (264) 12 13 15 16 54 58 59
STRING (265)
VOID (266)
RETURN (267) 29
IF (268) 30 31
ELSE (269) 31
WHILE (270) 32
FOR (271) 33
BREAK (272) 34
CONTINUE (273) 35
POINT (274)
SEMI (275) 5 25 27 29 33 34 35
COMMA (276) 8 17 61
S_QUOTA (277)
QUOTA (278)
LP (279) 15 16 30 31 32 33 53 58 59
RP (280) 15 16 30 31 32 33 53 58 59
LB (281) 14 60
RB (282) 14 60
LC (283) 20
RC (284) 20
OP_STAR (285) 50
OP_DIV (286) 51
OP_MOD (287) 52
OP_ADD (288) 48
OP_SUB (289) 49
OP_SHL (290) 46
OP_SHR (291) 47
OP_GT (292) 42
OP_LT (293) 43
OP_GE (294) 44
OP_LE (295) 45
OP_EQ (296) 40
OP_NEQ (297) 41
OP_BIT_AND (298) 39
OP_BIT_XOR (299) 38
OP_BIT_OR (300) 37
OP_ASSIGN (301) 13 36
LOWER_THAN_ELSE (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
DefList (50)
    on left: 2 3 4, on right: 1 3 4
VarDefStmt (51)
    on left: 5, on right: 3 23
FunDef (52)
    on left: 6, on right: 4
VarDecList (53)
    on left: 7 8, on right: 5 8
TYPE (54)
    on left: 9 10 11, on right: 5 6 19
VarDec (55)
    on left: 12 13 14, on right: 7 8 14 19
FunDec (56)
    on left: 15 16, on right: 6
ParaList (57)
    on left: 17 18, on right: 15 17
ParaDec (58)
    on left: 19, on right: 17 18
BLOCK (59)
    on left: 20, on right: 6 28
SentenceList (60)
    on left: 21 22, on right: 20 21
Sentence (61)
    on left: 23 24 25 26, on right: 21
Stmt (62)
    on left: 27 28 29 30 31 32 33 34 35, on right: 24 30 31 32 33
Expr (63)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56 57 58 59 60, on right: 13 27 29 30 31 32 33 36 37 38 39
    40 41 42 43 44 45 46 47 48 49 50 51 52 53 60 61 62
Args (64)
    on left: 61 62, on right: 58 61


State 0

    0 $accept: . Program $end

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefList)

    Program     go to state 4
    DefList     go to state 5
    VarDefStmt  go to state 6
    FunDef      go to state 7
    TYPE        go to state 8


State 1

    9 TYPE: TYPE_INT .

    $default  reduce using rule 9 (TYPE)


State 2

   11 TYPE: TYPE_CHAR .

    $default  reduce using rule 11 (TYPE)


State 3

   10 TYPE: TYPE_FLOAT .

    $default  reduce using rule 10 (TYPE)


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 5

    1 Program: DefList .

    $default  reduce using rule 1 (Program)


State 6

    3 DefList: VarDefStmt . DefList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefList)

    DefList     go to state 10
    VarDefStmt  go to state 6
    FunDef      go to state 7
    TYPE        go to state 8


State 7

    4 DefList: FunDef . DefList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    $default  reduce using rule 2 (DefList)

    DefList     go to state 11
    VarDefStmt  go to state 6
    FunDef      go to state 7
    TYPE        go to state 8


State 8

    5 VarDefStmt: TYPE . VarDecList SEMI
    6 FunDef: TYPE . FunDec BLOCK

    ID  shift, and go to state 12

    VarDecList  go to state 13
    VarDec      go to state 14
    FunDec      go to state 15


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    3 DefList: VarDefStmt DefList .

    $default  reduce using rule 3 (DefList)


State 11

    4 DefList: FunDef DefList .

    $default  reduce using rule 4 (DefList)


State 12

   12 VarDec: ID .
   13       | ID . OP_ASSIGN Expr
   15 FunDec: ID . LP ParaList RP
   16       | ID . LP RP

    LP         shift, and go to state 16
    OP_ASSIGN  shift, and go to state 17

    $default  reduce using rule 12 (VarDec)


State 13

    5 VarDefStmt: TYPE VarDecList . SEMI

    SEMI  shift, and go to state 18


State 14

    7 VarDecList: VarDec .
    8           | VarDec . COMMA VarDecList
   14 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 19
    LB     shift, and go to state 20

    $default  reduce using rule 7 (VarDecList)


State 15

    6 FunDef: TYPE FunDec . BLOCK

    LC  shift, and go to state 21

    BLOCK  go to state 22


State 16

   15 FunDec: ID LP . ParaList RP
   16       | ID LP . RP

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    RP          shift, and go to state 23

    TYPE      go to state 24
    ParaList  go to state 25
    ParaDec   go to state 26


State 17

   13 VarDec: ID OP_ASSIGN . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 32


State 18

    5 VarDefStmt: TYPE VarDecList SEMI .

    $default  reduce using rule 5 (VarDefStmt)


State 19

    8 VarDecList: VarDec COMMA . VarDecList

    ID  shift, and go to state 33

    VarDecList  go to state 34
    VarDec      go to state 14


State 20

   14 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 35


State 21

   20 BLOCK: LC . SentenceList RC

    error       shift, and go to state 36
    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 27
    FLOAT       shift, and go to state 28
    CHAR        shift, and go to state 29
    ID          shift, and go to state 30
    RETURN      shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    FOR         shift, and go to state 40
    BREAK       shift, and go to state 41
    CONTINUE    shift, and go to state 42
    LP          shift, and go to state 31
    LC          shift, and go to state 21

    RC  reduce using rule 22 (SentenceList)

    VarDefStmt    go to state 43
    TYPE          go to state 44
    BLOCK         go to state 45
    SentenceList  go to state 46
    Sentence      go to state 47
    Stmt          go to state 48
    Expr          go to state 49


State 22

    6 FunDef: TYPE FunDec BLOCK .

    $default  reduce using rule 6 (FunDef)


State 23

   16 FunDec: ID LP RP .

    $default  reduce using rule 16 (FunDec)


State 24

   19 ParaDec: TYPE . VarDec

    ID  shift, and go to state 33

    VarDec  go to state 50


State 25

   15 FunDec: ID LP ParaList . RP

    RP  shift, and go to state 51


State 26

   17 ParaList: ParaDec . COMMA ParaList
   18         | ParaDec .

    COMMA  shift, and go to state 52

    $default  reduce using rule 18 (ParaList)


State 27

   56 Expr: INT .

    $default  reduce using rule 56 (Expr)


State 28

   55 Expr: FLOAT .

    $default  reduce using rule 55 (Expr)


State 29

   57 Expr: CHAR .

    $default  reduce using rule 57 (Expr)


State 30

   54 Expr: ID .
   58     | ID . LP Args RP
   59     | ID . LP RP

    LP  shift, and go to state 53

    $default  reduce using rule 54 (Expr)


State 31

   53 Expr: LP . Expr RP

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 54


State 32

   13 VarDec: ID OP_ASSIGN Expr .
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72

    $default  reduce using rule 13 (VarDec)


State 33

   12 VarDec: ID .
   13       | ID . OP_ASSIGN Expr

    OP_ASSIGN  shift, and go to state 17

    $default  reduce using rule 12 (VarDec)


State 34

    8 VarDecList: VarDec COMMA VarDecList .

    $default  reduce using rule 8 (VarDecList)


State 35

   14 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 73


State 36

   25 Sentence: error . SEMI
   26         | error .

    SEMI  shift, and go to state 74

    $default  reduce using rule 26 (Sentence)


State 37

   29 Stmt: RETURN . Expr SEMI

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 75


State 38

   30 Stmt: IF . LP Expr RP Stmt
   31     | IF . LP Expr RP Stmt ELSE Stmt

    LP  shift, and go to state 76


State 39

   32 Stmt: WHILE . LP Expr RP Stmt

    LP  shift, and go to state 77


State 40

   33 Stmt: FOR . LP Expr SEMI Expr SEMI Expr RP Stmt

    LP  shift, and go to state 78


State 41

   34 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 79


State 42

   35 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 80


State 43

   23 Sentence: VarDefStmt .

    $default  reduce using rule 23 (Sentence)


State 44

    5 VarDefStmt: TYPE . VarDecList SEMI

    ID  shift, and go to state 33

    VarDecList  go to state 13
    VarDec      go to state 14


State 45

   28 Stmt: BLOCK .

    $default  reduce using rule 28 (Stmt)


State 46

   20 BLOCK: LC SentenceList . RC

    RC  shift, and go to state 81


State 47

   21 SentenceList: Sentence . SentenceList

    error       shift, and go to state 36
    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3
    INT         shift, and go to state 27
    FLOAT       shift, and go to state 28
    CHAR        shift, and go to state 29
    ID          shift, and go to state 30
    RETURN      shift, and go to state 37
    IF          shift, and go to state 38
    WHILE       shift, and go to state 39
    FOR         shift, and go to state 40
    BREAK       shift, and go to state 41
    CONTINUE    shift, and go to state 42
    LP          shift, and go to state 31
    LC          shift, and go to state 21

    RC  reduce using rule 22 (SentenceList)

    VarDefStmt    go to state 43
    TYPE          go to state 44
    BLOCK         go to state 45
    SentenceList  go to state 82
    Sentence      go to state 47
    Stmt          go to state 48
    Expr          go to state 49


State 48

   24 Sentence: Stmt .

    $default  reduce using rule 24 (Sentence)


State 49

   27 Stmt: Expr . SEMI
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    SEMI        shift, and go to state 83
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 50

   14 VarDec: VarDec . LB INT RB
   19 ParaDec: TYPE VarDec .

    LB  shift, and go to state 20

    $default  reduce using rule 19 (ParaDec)


State 51

   15 FunDec: ID LP ParaList RP .

    $default  reduce using rule 15 (FunDec)


State 52

   17 ParaList: ParaDec COMMA . ParaList

    TYPE_INT    shift, and go to state 1
    TYPE_CHAR   shift, and go to state 2
    TYPE_FLOAT  shift, and go to state 3

    TYPE      go to state 24
    ParaList  go to state 84
    ParaDec   go to state 26


State 53

   58 Expr: ID LP . Args RP
   59     | ID LP . RP

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31
    RP     shift, and go to state 85

    Expr  go to state 86
    Args  go to state 87


State 54

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   53     | LP Expr . RP
   60     | Expr . LB Expr RB

    RP          shift, and go to state 88
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 55

   60 Expr: Expr LB . Expr RB

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 89


State 56

   50 Expr: Expr OP_STAR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 90


State 57

   51 Expr: Expr OP_DIV . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 91


State 58

   52 Expr: Expr OP_MOD . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 92


State 59

   48 Expr: Expr OP_ADD . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 93


State 60

   49 Expr: Expr OP_SUB . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 94


State 61

   46 Expr: Expr OP_SHL . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 95


State 62

   47 Expr: Expr OP_SHR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 96


State 63

   42 Expr: Expr OP_GT . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 97


State 64

   43 Expr: Expr OP_LT . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 98


State 65

   44 Expr: Expr OP_GE . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 99


State 66

   45 Expr: Expr OP_LE . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 100


State 67

   40 Expr: Expr OP_EQ . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 101


State 68

   41 Expr: Expr OP_NEQ . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 102


State 69

   39 Expr: Expr OP_BIT_AND . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 103


State 70

   38 Expr: Expr OP_BIT_XOR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 104


State 71

   37 Expr: Expr OP_BIT_OR . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 105


State 72

   36 Expr: Expr OP_ASSIGN . Expr

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 106


State 73

   14 VarDec: VarDec LB INT RB .

    $default  reduce using rule 14 (VarDec)


State 74

   25 Sentence: error SEMI .

    $default  reduce using rule 25 (Sentence)


State 75

   29 Stmt: RETURN Expr . SEMI
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    SEMI        shift, and go to state 107
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 76

   30 Stmt: IF LP . Expr RP Stmt
   31     | IF LP . Expr RP Stmt ELSE Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 108


State 77

   32 Stmt: WHILE LP . Expr RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 109


State 78

   33 Stmt: FOR LP . Expr SEMI Expr SEMI Expr RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 110


State 79

   34 Stmt: BREAK SEMI .

    $default  reduce using rule 34 (Stmt)


State 80

   35 Stmt: CONTINUE SEMI .

    $default  reduce using rule 35 (Stmt)


State 81

   20 BLOCK: LC SentenceList RC .

    $default  reduce using rule 20 (BLOCK)


State 82

   21 SentenceList: Sentence SentenceList .

    $default  reduce using rule 21 (SentenceList)


State 83

   27 Stmt: Expr SEMI .

    $default  reduce using rule 27 (Stmt)


State 84

   17 ParaList: ParaDec COMMA ParaList .

    $default  reduce using rule 17 (ParaList)


State 85

   59 Expr: ID LP RP .

    $default  reduce using rule 59 (Expr)


State 86

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB
   61 Args: Expr . COMMA Args
   62     | Expr .

    COMMA       shift, and go to state 111
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72

    $default  reduce using rule 62 (Args)


State 87

   58 Expr: ID LP Args . RP

    RP  shift, and go to state 112


State 88

   53 Expr: LP Expr RP .

    $default  reduce using rule 53 (Expr)


State 89

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB
   60     | Expr LB Expr . RB

    LB          shift, and go to state 55
    RB          shift, and go to state 113
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 90

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   50     | Expr OP_STAR Expr .
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB  shift, and go to state 55

    $default  reduce using rule 50 (Expr)


State 91

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   51     | Expr OP_DIV Expr .
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB  shift, and go to state 55

    $default  reduce using rule 51 (Expr)


State 92

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   52     | Expr OP_MOD Expr .
   60     | Expr . LB Expr RB

    LB  shift, and go to state 55

    $default  reduce using rule 52 (Expr)


State 93

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   48     | Expr OP_ADD Expr .
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58

    $default  reduce using rule 48 (Expr)


State 94

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   49     | Expr OP_SUB Expr .
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58

    $default  reduce using rule 49 (Expr)


State 95

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   46     | Expr OP_SHL Expr .
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60

    $default  reduce using rule 46 (Expr)


State 96

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   47     | Expr OP_SHR Expr .
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60

    $default  reduce using rule 47 (Expr)


State 97

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   42     | Expr OP_GT Expr .
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62

    $default  reduce using rule 42 (Expr)


State 98

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   43     | Expr OP_LT Expr .
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62

    $default  reduce using rule 43 (Expr)


State 99

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   44     | Expr OP_GE Expr .
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62

    $default  reduce using rule 44 (Expr)


State 100

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   45     | Expr OP_LE Expr .
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62

    $default  reduce using rule 45 (Expr)


State 101

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   40     | Expr OP_EQ Expr .
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62
    OP_GT    shift, and go to state 63
    OP_LT    shift, and go to state 64
    OP_GE    shift, and go to state 65
    OP_LE    shift, and go to state 66

    $default  reduce using rule 40 (Expr)


State 102

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   41     | Expr OP_NEQ Expr .
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62
    OP_GT    shift, and go to state 63
    OP_LT    shift, and go to state 64
    OP_GE    shift, and go to state 65
    OP_LE    shift, and go to state 66

    $default  reduce using rule 41 (Expr)


State 103

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   39     | Expr OP_BIT_AND Expr .
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB       shift, and go to state 55
    OP_STAR  shift, and go to state 56
    OP_DIV   shift, and go to state 57
    OP_MOD   shift, and go to state 58
    OP_ADD   shift, and go to state 59
    OP_SUB   shift, and go to state 60
    OP_SHL   shift, and go to state 61
    OP_SHR   shift, and go to state 62
    OP_GT    shift, and go to state 63
    OP_LT    shift, and go to state 64
    OP_GE    shift, and go to state 65
    OP_LE    shift, and go to state 66
    OP_EQ    shift, and go to state 67
    OP_NEQ   shift, and go to state 68

    $default  reduce using rule 39 (Expr)


State 104

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   38     | Expr OP_BIT_XOR Expr .
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69

    $default  reduce using rule 38 (Expr)


State 105

   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   37     | Expr OP_BIT_OR Expr .
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70

    $default  reduce using rule 37 (Expr)


State 106

   36 Expr: Expr . OP_ASSIGN Expr
   36     | Expr OP_ASSIGN Expr .
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72

    $default  reduce using rule 36 (Expr)


State 107

   29 Stmt: RETURN Expr SEMI .

    $default  reduce using rule 29 (Stmt)


State 108

   30 Stmt: IF LP Expr . RP Stmt
   31     | IF LP Expr . RP Stmt ELSE Stmt
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    RP          shift, and go to state 114
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 109

   32 Stmt: WHILE LP Expr . RP Stmt
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    RP          shift, and go to state 115
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 110

   33 Stmt: FOR LP Expr . SEMI Expr SEMI Expr RP Stmt
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    SEMI        shift, and go to state 116
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 111

   61 Args: Expr COMMA . Args

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 86
    Args  go to state 117


State 112

   58 Expr: ID LP Args RP .

    $default  reduce using rule 58 (Expr)


State 113

   60 Expr: Expr LB Expr RB .

    $default  reduce using rule 60 (Expr)


State 114

   30 Stmt: IF LP Expr RP . Stmt
   31     | IF LP Expr RP . Stmt ELSE Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    FOR       shift, and go to state 40
    BREAK     shift, and go to state 41
    CONTINUE  shift, and go to state 42
    LP        shift, and go to state 31
    LC        shift, and go to state 21

    BLOCK  go to state 45
    Stmt   go to state 118
    Expr   go to state 49


State 115

   32 Stmt: WHILE LP Expr RP . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    FOR       shift, and go to state 40
    BREAK     shift, and go to state 41
    CONTINUE  shift, and go to state 42
    LP        shift, and go to state 31
    LC        shift, and go to state 21

    BLOCK  go to state 45
    Stmt   go to state 119
    Expr   go to state 49


State 116

   33 Stmt: FOR LP Expr SEMI . Expr SEMI Expr RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 120


State 117

   61 Args: Expr COMMA Args .

    $default  reduce using rule 61 (Args)


State 118

   30 Stmt: IF LP Expr RP Stmt .
   31     | IF LP Expr RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 121

    $default  reduce using rule 30 (Stmt)


State 119

   32 Stmt: WHILE LP Expr RP Stmt .

    $default  reduce using rule 32 (Stmt)


State 120

   33 Stmt: FOR LP Expr SEMI Expr . SEMI Expr RP Stmt
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    SEMI        shift, and go to state 122
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 121

   31 Stmt: IF LP Expr RP Stmt ELSE . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    FOR       shift, and go to state 40
    BREAK     shift, and go to state 41
    CONTINUE  shift, and go to state 42
    LP        shift, and go to state 31
    LC        shift, and go to state 21

    BLOCK  go to state 45
    Stmt   go to state 123
    Expr   go to state 49


State 122

   33 Stmt: FOR LP Expr SEMI Expr SEMI . Expr RP Stmt

    INT    shift, and go to state 27
    FLOAT  shift, and go to state 28
    CHAR   shift, and go to state 29
    ID     shift, and go to state 30
    LP     shift, and go to state 31

    Expr  go to state 124


State 123

   31 Stmt: IF LP Expr RP Stmt ELSE Stmt .

    $default  reduce using rule 31 (Stmt)


State 124

   33 Stmt: FOR LP Expr SEMI Expr SEMI Expr . RP Stmt
   36 Expr: Expr . OP_ASSIGN Expr
   37     | Expr . OP_BIT_OR Expr
   38     | Expr . OP_BIT_XOR Expr
   39     | Expr . OP_BIT_AND Expr
   40     | Expr . OP_EQ Expr
   41     | Expr . OP_NEQ Expr
   42     | Expr . OP_GT Expr
   43     | Expr . OP_LT Expr
   44     | Expr . OP_GE Expr
   45     | Expr . OP_LE Expr
   46     | Expr . OP_SHL Expr
   47     | Expr . OP_SHR Expr
   48     | Expr . OP_ADD Expr
   49     | Expr . OP_SUB Expr
   50     | Expr . OP_STAR Expr
   51     | Expr . OP_DIV Expr
   52     | Expr . OP_MOD Expr
   60     | Expr . LB Expr RB

    RP          shift, and go to state 125
    LB          shift, and go to state 55
    OP_STAR     shift, and go to state 56
    OP_DIV      shift, and go to state 57
    OP_MOD      shift, and go to state 58
    OP_ADD      shift, and go to state 59
    OP_SUB      shift, and go to state 60
    OP_SHL      shift, and go to state 61
    OP_SHR      shift, and go to state 62
    OP_GT       shift, and go to state 63
    OP_LT       shift, and go to state 64
    OP_GE       shift, and go to state 65
    OP_LE       shift, and go to state 66
    OP_EQ       shift, and go to state 67
    OP_NEQ      shift, and go to state 68
    OP_BIT_AND  shift, and go to state 69
    OP_BIT_XOR  shift, and go to state 70
    OP_BIT_OR   shift, and go to state 71
    OP_ASSIGN   shift, and go to state 72


State 125

   33 Stmt: FOR LP Expr SEMI Expr SEMI Expr RP . Stmt

    INT       shift, and go to state 27
    FLOAT     shift, and go to state 28
    CHAR      shift, and go to state 29
    ID        shift, and go to state 30
    RETURN    shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    FOR       shift, and go to state 40
    BREAK     shift, and go to state 41
    CONTINUE  shift, and go to state 42
    LP        shift, and go to state 31
    LC        shift, and go to state 21

    BLOCK  go to state 45
    Stmt   go to state 126
    Expr   go to state 49


State 126

   33 Stmt: FOR LP Expr SEMI Expr SEMI Expr RP Stmt .

    $default  reduce using rule 33 (Stmt)
